pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "santhoshgrandhi/gym-static-site:13"
    }

    options {
        skipDefaultCheckout()
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/SanthoshGrandhi7/Gymproject.git', credentialsId: 'dockerhub'
            }
        }

        stage('Install Dependencies') {
            when {
                expression { fileExists('package.json') }
            }
            steps {
                bat 'npm install'
            }
        }

        stage('Run Tests') {
            when {
                expression { fileExists('package.json') }
            }
            steps {
                bat 'npm test'
            }
        }

        stage('Build Static Site') {
            when {
                expression { fileExists('package.json') }
            }
            steps {
                bat 'npm run build'
            }
        }

        stage('Build Docker Image') {
            steps {
                bat "docker build -t ${env.DOCKER_IMAGE} ."
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    bat 'echo %DOCKER_PASS% | docker login -u %DOCKER_USER% --password-stdin'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                bat "docker push ${env.DOCKER_IMAGE}"
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploy step would go here'
            }
        }
    }

    post {
        always {
            bat 'docker logout'
            bat "docker rmi ${env.DOCKER_IMAGE} || exit 0"
        }

        failure {
            echo 'Pipeline failed. Check logs above.'
        }
    }
}
